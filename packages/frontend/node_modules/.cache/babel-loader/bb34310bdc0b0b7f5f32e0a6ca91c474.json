{"ast":null,"code":"var _jsxFileName = \"/Users/viniciusprudencio/Desktop/development/other-programs/desafio/desafio-fullstack/packages/frontend/src/presentation/components/InputMasked/index.tsx\";\nimport React, { useRef, useEffect } from 'react';\nimport InputMask from 'react-input-mask';\nimport { useField } from '@unform/core';\nimport { Container } from './styles';\n\nconst InputMasked = ({\n  flex,\n  name,\n  icon,\n  mask,\n  ...rest\n}) => {\n  const inputRef = useRef(null);\n  const {\n    fieldName,\n    registerField,\n    error\n  } = useField(name);\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      path: 'value',\n\n      clearValue(ref) {\n        ref.setInputValue('');\n      }\n\n    });\n  }, [fieldName, registerField]);\n  return /*#__PURE__*/React.createElement(Container, {\n    className: \"input-block\",\n    style: {\n      flex\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: icon,\n    alt: \"input icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(InputMask, Object.assign({\n    maskChar: \" \",\n    mask: mask,\n    ref: inputRef\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  })), error && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 18\n    }\n  }, error));\n};\n\nexport default InputMasked;","map":{"version":3,"sources":["/Users/viniciusprudencio/Desktop/development/other-programs/desafio/desafio-fullstack/packages/frontend/src/presentation/components/InputMasked/index.tsx"],"names":["React","useRef","useEffect","InputMask","useField","Container","InputMasked","flex","name","icon","mask","rest","inputRef","fieldName","registerField","error","ref","current","path","clearValue","setInputValue"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAA+C,kBAA/C;AAEA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,SAAT,QAA0B,UAA1B;;AASA,MAAMC,WAA4B,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,IAAR;AAAcC,EAAAA,IAAd;AAAoBC,EAAAA,IAApB;AAA0B,KAAGC;AAA7B,CAAD,KAAyC;AAC5E,QAAMC,QAAQ,GAAGX,MAAM,CAAC,IAAD,CAAvB;AACA,QAAM;AAAEY,IAAAA,SAAF;AAAaC,IAAAA,aAAb;AAA4BC,IAAAA;AAA5B,MAAsCX,QAAQ,CAACI,IAAD,CAApD;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,aAAa,CAAC;AACZN,MAAAA,IAAI,EAAEK,SADM;AAEZG,MAAAA,GAAG,EAAEJ,QAAQ,CAACK,OAFF;AAGZC,MAAAA,IAAI,EAAE,OAHM;;AAIZC,MAAAA,UAAU,CAACH,GAAD,EAAW;AACnBA,QAAAA,GAAG,CAACI,aAAJ,CAAkB,EAAlB;AACD;;AANW,KAAD,CAAb;AAQD,GATQ,EASN,CAACP,SAAD,EAAYC,aAAZ,CATM,CAAT;AAWA,sBACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,aAArB;AAAmC,IAAA,KAAK,EAAE;AAAEP,MAAAA;AAAF,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAEE,IAAV;AAAgB,IAAA,GAAG,EAAC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,SAAD;AAAW,IAAA,QAAQ,EAAC,GAApB;AAAwB,IAAA,IAAI,EAAEC,IAA9B;AAAoC,IAAA,GAAG,EAAEE;AAAzC,KAAuDD,IAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,EAGII,KAAK,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,KAAJ,CAHb,CADF;AAOD,CAtBD;;AAwBA,eAAeT,WAAf","sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport InputMask, { Props as InputProps } from 'react-input-mask'\n\nimport { useField } from '@unform/core'\nimport { Container } from './styles'\n\ninterface Props extends InputProps {\n  flex?: number\n  name: string\n  icon: any\n  mask: string\n}\n\nconst InputMasked: React.FC<Props> = ({ flex, name, icon, mask, ...rest }) => {\n  const inputRef = useRef(null);\n  const { fieldName, registerField, error } = useField(name);\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      path: 'value',\n      clearValue(ref: any) {\n        ref.setInputValue('');\n      },\n    });\n  }, [fieldName, registerField]);\n\n  return (\n    <Container className=\"input-block\" style={{ flex }}>\n      <img src={icon} alt=\"input icon\"/>\n      <InputMask maskChar=\" \" mask={mask} ref={inputRef} {...rest} />\n      { error && <p>{error}</p>}\n    </Container>\n  )\n}\n\nexport default InputMasked"]},"metadata":{},"sourceType":"module"}