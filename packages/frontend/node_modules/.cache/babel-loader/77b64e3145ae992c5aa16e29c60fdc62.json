{"ast":null,"code":"var _jsxFileName = \"/Users/viniciusprudencio/Desktop/development/other-programs/desafio/desafio-fullstack/packages/frontend/src/presentation/hooks/auth.tsx\";\nimport React, { createContext, useCallback, useState, useContext } from 'react';\nimport api from '../../infra/services/http/api';\n// useCallback(() => {}, []) => só altera a função quando necessario\nconst AuthContext = createContext({});\n\nconst AuthProvider = ({\n  children\n}) => {\n  const [data, setData] = useState(() => {\n    const token = localStorage.getItem('@profitfyme:token');\n    const user = localStorage.getItem('@profitfyme:user');\n\n    if (token && user) {\n      api.defaults.headers.authorization = `Bearer ${token}`;\n      return {\n        token,\n        user: JSON.parse(user)\n      };\n    }\n\n    return {};\n  });\n  const signIn = useCallback(async ({\n    email,\n    password\n  }) => {\n    const response = await api.post('session', {\n      email,\n      password\n    });\n    const {\n      token,\n      user\n    } = response.data;\n    localStorage.setItem('@profitfyme:token', token);\n    localStorage.setItem('@profitfyme:user', JSON.stringify(user));\n    api.defaults.headers.authorization = `Bearer ${token}`;\n    setData({\n      token,\n      user\n    });\n  }, []);\n  const signOut = useCallback(() => {\n    localStorage.removeItem('@events:token');\n    localStorage.removeItem('@events:user');\n    setData({});\n  }, []);\n  const updateUser = useCallback(user => {\n    localStorage.setItem('@events:user', JSON.stringify(user));\n    setData({\n      token: data.token,\n      user\n    });\n  }, [setData, data.token]);\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      user: data.user,\n      signIn,\n      signOut\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nfunction useAuth() {\n  const context = useContext(AuthContext);\n\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n\n  return context;\n}\n\nexport { AuthProvider, useAuth };","map":{"version":3,"sources":["/Users/viniciusprudencio/Desktop/development/other-programs/desafio/desafio-fullstack/packages/frontend/src/presentation/hooks/auth.tsx"],"names":["React","createContext","useCallback","useState","useContext","api","AuthContext","AuthProvider","children","data","setData","token","localStorage","getItem","user","defaults","headers","authorization","JSON","parse","signIn","email","password","response","post","setItem","stringify","signOut","removeItem","updateUser","useAuth","context","Error"],"mappings":"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","sourcesContent":["import React, { createContext, useCallback, useState, useContext } from 'react'\n\nimport api from '../../infra/services/http/api'\n\ninterface User {\n  id: string\n  avatar_url: string\n  name: string\n  email: string\n}\n\ninterface AuthState {\n  token: string\n  user: User\n}\n\ninterface SignInCredentials {\n  email: string\n  password: string\n}\n\ninterface AuthContextData {\n  user: User\n  signIn(credentials: SignInCredentials): Promise<void>\n  signOut(): void\n  updateUser(user: User): void\n}\n\n// useCallback(() => {}, []) => só altera a função quando necessario\n\nconst AuthContext = createContext<AuthContextData>({} as AuthContextData)\n\nconst AuthProvider: React.FC = ({ children }) => {\n  const [data, setData] = useState<AuthState>(() => {\n    const token = localStorage.getItem('@profitfyme:token')\n    const user = localStorage.getItem('@profitfyme:user')\n\n    if (token && user) {\n      api.defaults.headers.authorization = `Bearer ${token}`\n      return { token, user: JSON.parse(user) }\n    }\n\n    return {} as AuthState\n  })\n\n  const signIn = useCallback(async ({ email, password }) => {\n    const response = await api.post('session', { email, password })\n\n    const { token, user } = response.data\n\n    localStorage.setItem('@profitfyme:token', token)\n    localStorage.setItem('@profitfyme:user', JSON.stringify(user))\n\n    api.defaults.headers.authorization = `Bearer ${token}`\n\n    setData({ token, user })\n  }, [])\n\n  const signOut = useCallback(() => {\n    localStorage.removeItem('@events:token')\n    localStorage.removeItem('@events:user')\n\n    setData({} as AuthState);\n  }, [])\n\n  const updateUser = useCallback(\n    (user: User) => {\n      localStorage.setItem('@events:user', JSON.stringify(user))\n\n      setData({\n        token: data.token,\n        user,\n      })\n    },\n    [setData, data.token],\n  )\n\n  return (\n    <AuthContext.Provider\n      value={{ user: data.user, signIn, signOut }}\n    >\n      {children}\n    </AuthContext.Provider>\n  )\n}\n\nfunction useAuth(): AuthContextData {\n  const context = useContext(AuthContext);\n\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider')\n  }\n\n  return context\n}\n\nexport { AuthProvider, useAuth }"]},"metadata":{},"sourceType":"module"}