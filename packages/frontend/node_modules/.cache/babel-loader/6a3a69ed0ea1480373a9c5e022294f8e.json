{"ast":null,"code":"var _jsxFileName = \"/Users/viniciusprudencio/Desktop/development/other-programs/desafio/desafio-fullstack/packages/frontend/src/presentation/hooks/auth.tsx\";\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport api from '../../infra/services/http/api';\nconst AuthContext = createContext({});\nexport const AuthProvider = ({\n  children\n}) => {\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    async function loadStorageData() {\n      const user = localStorage.getItem('@RAuth:user');\n      const token = localStorage.getItem('@RAuth:token');\n\n      if (user && token) {\n        api.defaults.headers.Authorization = `token ${token}`;\n        setUser(JSON.parse(user));\n      }\n    }\n\n    loadStorageData();\n  }, []);\n\n  async function signIn(url, params) {\n    const {\n      data\n    } = await api.get(url, {\n      params\n    });\n    setTimeout(() => {\n      setUser(data.user);\n    }, 3000); // Set toke for all request\n\n    api.defaults.headers.Authorization = `Token ${data.token}`;\n    localStorage.setItem('@RAuth:user', JSON.stringify(data.user));\n    localStorage.setItem('@RAuth:token', data.token);\n  }\n\n  function signOut() {\n    localStorage.clear();\n    setUser(null);\n  }\n\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      signed: !!user,\n      user,\n      signIn,\n      signOut\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, children);\n}; // Hook próprio\n\nexport function useAuth() {\n  const context = useContext(AuthContext);\n  return context;\n}","map":{"version":3,"sources":["/Users/viniciusprudencio/Desktop/development/other-programs/desafio/desafio-fullstack/packages/frontend/src/presentation/hooks/auth.tsx"],"names":["React","createContext","useState","useEffect","useContext","api","AuthContext","AuthProvider","children","user","setUser","loadStorageData","localStorage","getItem","token","defaults","headers","Authorization","JSON","parse","signIn","url","params","data","get","setTimeout","setItem","stringify","signOut","clear","signed","useAuth","context"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,SAAzC,EAAoDC,UAApD,QAAsE,OAAtE;AACA,OAAOC,GAAP,MAAgB,+BAAhB;AAoBA,MAAMC,WAAW,GAAGL,aAAa,CAAkB,EAAlB,CAAjC;AAEA,OAAO,MAAMM,YAAsB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACtD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAc,IAAd,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeQ,eAAf,GAAkC;AAChC,YAAMF,IAAI,GAAGG,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAb;AACA,YAAMC,KAAK,GAAGF,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAd;;AAEA,UAAIJ,IAAI,IAAIK,KAAZ,EAAmB;AACjBT,QAAAA,GAAG,CAACU,QAAJ,CAAaC,OAAb,CAAqBC,aAArB,GAAsC,SAAQH,KAAM,EAApD;AAEAJ,QAAAA,OAAO,CAACQ,IAAI,CAACC,KAAL,CAAWV,IAAX,CAAD,CAAP;AACD;AACF;;AACDE,IAAAA,eAAe;AAChB,GAZQ,EAYN,EAZM,CAAT;;AAcA,iBAAeS,MAAf,CAAuBC,GAAvB,EAAoCC,MAApC,EAAqD;AACnD,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMlB,GAAG,CAACmB,GAAJ,CAAwBH,GAAxB,EAA6B;AAAEC,MAAAA;AAAF,KAA7B,CAAvB;AAEAG,IAAAA,UAAU,CAAC,MAAM;AACff,MAAAA,OAAO,CAACa,IAAI,CAACd,IAAN,CAAP;AACD,KAFS,EAEP,IAFO,CAAV,CAHmD,CAOnD;;AACAJ,IAAAA,GAAG,CAACU,QAAJ,CAAaC,OAAb,CAAqBC,aAArB,GAAsC,SAAQM,IAAI,CAACT,KAAM,EAAzD;AAEAF,IAAAA,YAAY,CAACc,OAAb,CAAqB,aAArB,EAAoCR,IAAI,CAACS,SAAL,CAAeJ,IAAI,CAACd,IAApB,CAApC;AACAG,IAAAA,YAAY,CAACc,OAAb,CAAqB,cAArB,EAAqCH,IAAI,CAACT,KAA1C;AACD;;AAED,WAASc,OAAT,GAAoB;AAClBhB,IAAAA,YAAY,CAACiB,KAAb;AACAnB,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD;;AAED,sBACE,oBAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AAAEoB,MAAAA,MAAM,EAAE,CAAC,CAACrB,IAAZ;AAAkBA,MAAAA,IAAlB;AAAwBW,MAAAA,MAAxB;AAAgCQ,MAAAA;AAAhC,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGpB,QAFH,CADF;AAMD,CA1CM,C,CA4CP;;AACA,OAAO,SAASuB,OAAT,GAAoB;AACzB,QAAMC,OAAO,GAAG5B,UAAU,CAACE,WAAD,CAA1B;AAEA,SAAO0B,OAAP;AACD","sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react'\nimport api from '../../infra/services/http/api'\n\ninterface User {\n  id: number\n  name: string\n  email: string\n  avatar_url: string | null\n}\ninterface Authentication {\n  user: User\n  token: string\n}\n\ninterface AuthContextData {\n  signed: boolean\n  user: User | null\n  signIn(url: string, params: unknown): Promise<void>\n  signOut(): void\n}\n\nconst AuthContext = createContext<AuthContextData>({} as AuthContextData)\n\nexport const AuthProvider: React.FC = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null)\n\n  useEffect(() => {\n    async function loadStorageData () {\n      const user = localStorage.getItem('@RAuth:user')\n      const token = localStorage.getItem('@RAuth:token')\n\n      if (user && token) {\n        api.defaults.headers.Authorization = `token ${token}`\n\n        setUser(JSON.parse(user))\n      }\n    }\n    loadStorageData()\n  }, [])\n\n  async function signIn (url: string, params: unknown) {\n    const { data } = await api.get<Authentication>(url, { params })\n\n    setTimeout(() => {\n      setUser(data.user)\n    }, 3000)\n\n    // Set toke for all request\n    api.defaults.headers.Authorization = `Token ${data.token}`\n\n    localStorage.setItem('@RAuth:user', JSON.stringify(data.user))\n    localStorage.setItem('@RAuth:token', data.token)\n  }\n\n  function signOut () {\n    localStorage.clear()\n    setUser(null)\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{ signed: !!user, user, signIn, signOut }}>\n      {children}\n    </AuthContext.Provider>\n  )\n}\n\n// Hook próprio\nexport function useAuth () {\n  const context = useContext(AuthContext)\n\n  return context\n}"]},"metadata":{},"sourceType":"module"}